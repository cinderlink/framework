{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/pubsub/types.ts"],"names":[],"mappings":"","sourcesContent":["import * as json from \"multiformats\";\nimport { PluginEventDef, PluginEventHandlers } from \"../plugin/types\";\nimport {\n  DecodedProtocolMessage,\n  EncodedProtocolPayload,\n  EncodingOptions,\n  ProtocolMessage,\n} from \"../protocol\";\nimport { Peer } from \"../p2p\";\nimport { PeerId } from \"@libp2p/interface\";\n\nexport type LibP2PPubsubMessage<\n  Events extends PluginEventDef = PluginEventDef,\n  Topic extends keyof Events[\"subscribe\"] = keyof Events[\"subscribe\"],\n  Encoding extends EncodingOptions = EncodingOptions,\n  Data extends EncodedProtocolPayload<\n    Events[\"subscribe\"][Topic],\n    Encoding\n  > = EncodedProtocolPayload<Events[\"subscribe\"][Topic], Encoding>,\n  FromType = PeerId\n> = {\n  type: \"signed\" | \"unsigned\";\n  from: FromType;\n  peer: Peer;\n  sequenceNumber: number;\n  topic: keyof Events[\"subscribe\"];\n  data: json.ByteView<Data>;\n  signature?: Uint8Array;\n};\n\nexport type SubscribeEvents<\n  PluginEvents extends PluginEventDef = PluginEventDef\n> = {\n  [K in keyof PluginEvents[\"subscribe\"]]: IncomingPubsubMessage<\n    PluginEvents,\n    K\n  >;\n};\n\nexport type SubscribeEventHandlers<\n  PluginEvents extends PluginEventDef = PluginEventDef\n> = PluginEventHandlers<SubscribeEvents<PluginEvents>>;\n\nexport type OutgoingPubsubMessage<\n  PluginEvents extends PluginEventDef = PluginEventDef,\n  Topic extends keyof PluginEvents[\"publish\"] = keyof PluginEvents[\"publish\"],\n  Encoding extends EncodingOptions = EncodingOptions\n> = ProtocolMessage<PluginEvents[\"publish\"][Topic], Topic, Encoding>;\n\nexport type IncomingPubsubMessage<\n  PluginEvents extends PluginEventDef = PluginEventDef,\n  Topic extends keyof PluginEvents[\"subscribe\"] = keyof PluginEvents[\"subscribe\"],\n  Encoding extends EncodingOptions = EncodingOptions\n> = DecodedProtocolMessage<PluginEvents, \"subscribe\", Topic, Encoding> & {\n  peer: Peer;\n};\n"]}