{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../src/p2p/interface.ts"],"names":[],"mappings":"","sourcesContent":["import type { PeerId } from \"@libp2p/interface\";\nimport { Peer } from \"./types\";\n\nexport interface PeerStoreInterface {\n  peers: Record<string, Peer>;\n  peerIds: Record<string, string>;\n  localPeerId: string;\n  addPeer(peerId: PeerId, role: \"server\" | \"peer\"): Peer;\n  hasPeer(peerId: string): boolean;\n  hasServer(peerId: string): boolean;\n  getServers(): Peer[];\n  getServerCount(): number;\n  getPeers(): Peer[];\n  getAllPeers(): Peer[];\n  peerCount(): number;\n  allPeerCount(): number;\n  removePeer(peerId: string): void;\n  getPeer(peerId: string): Peer;\n  updatePeer(peerId: string, peer: Partial<Peer>): void;\n  setMetadata(peerId: string, key: string, value: string): void;\n  isConnected(peerId: string): boolean;\n  isDIDConnected(did: string): boolean;\n\n  hasPeerByDID(did: string): boolean;\n  getPeerByDID(did: string): Peer | undefined;\n  getPeerIdByDID(did: string): string | undefined;\n  getDIDByPeerId(peerId: string): string | undefined;\n}\n"]}