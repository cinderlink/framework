{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/sync/types.ts"],"names":[],"mappings":"","sourcesContent":["import { CinderlinkClientInterface } from \"../client\";\nimport { QueryBuilderInterface, TableInterface, TableRow } from \"../database\";\nimport { Peer } from \"../p2p\";\nimport { PluginEventDef } from \"../plugin\";\n\nexport interface SyncTablesRow extends TableRow {\n  schemaId: string;\n  tableId: string;\n  did: string;\n  lastSyncedAt: number;\n  lastFetchedAt: number;\n}\n\nexport interface SyncRowsRow extends TableRow {\n  schemaId: string;\n  tableId: string;\n  rowUid: string;\n  did: string;\n  success?: boolean;\n  error?: string;\n  attempts?: number;\n  lastSyncedAt: number;\n  lastFetchedAt: number;\n}\n\nexport interface SyncConfig<Row extends TableRow> {\n  syncOnChange?: boolean;\n  query: (\n    table: TableInterface<Row>,\n    params: Record<string, any>,\n    client: CinderlinkClientInterface<any>\n  ) => QueryBuilderInterface<Row>;\n  fetchInterval?: number;\n  fetchFrom?: (\n    peers: Peer[],\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<string | string[] | boolean>;\n  syncInterval?: number;\n  syncTo?: (\n    peers: Peer[],\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<string | string[] | boolean>;\n  syncRowTo?: (\n    row: Row,\n    peers: Peer[],\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<string | string[] | boolean>;\n  allowFetchFrom?: (\n    did: string,\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<boolean>;\n  allowFetchRowFrom?: (\n    row: Row,\n    did: string,\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<boolean>;\n  allowNewFrom?: (\n    did: string,\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<boolean>;\n  allowUpdateFrom?: (\n    row: Row,\n    did: string,\n    table: TableInterface<Row>,\n    client: CinderlinkClientInterface<any>\n  ) => Promise<boolean>;\n  incomingRateLimit?: number;\n  outgoingRateLimit?: number;\n}\n\nexport interface SyncSaveRequest {\n  requestId: string;\n  schemaId: string;\n  tableId: string;\n  rows: TableRow[];\n}\n\nexport interface SyncSaveResponse {\n  requestId: string;\n  schemaId: string;\n  tableId: string;\n  saved?: string[];\n  errors?: Record<number, string>;\n}\n\nexport interface SyncFetchRequest {\n  requestId: string;\n  schemaId: string;\n  tableId: string;\n  since: number;\n}\n\nexport interface SyncFetchResponse {\n  requestId: string;\n  schemaId: string;\n  tableId: string;\n  rows: TableRow[];\n}\n\nexport interface SyncSinceRequest {\n  since: number;\n}\n\nexport interface SyncPluginEvents extends PluginEventDef {\n  send: {\n    \"/cinderlink/sync/save/request\": SyncSaveRequest;\n    \"/cinderlink/sync/save/response\": SyncSaveResponse;\n    \"/cinderlink/sync/fetch/request\": SyncFetchRequest;\n    \"/cinderlink/sync/fetch/response\": SyncFetchResponse;\n    \"/cinderlink/sync/since\": SyncSinceRequest;\n  };\n  receive: {\n    \"/cinderlink/sync/save/request\": SyncSaveRequest;\n    \"/cinderlink/sync/save/response\": SyncSaveResponse;\n    \"/cinderlink/sync/fetch/request\": SyncFetchRequest;\n    \"/cinderlink/sync/fetch/response\": SyncFetchResponse;\n    \"/cinderlink/sync/since\": SyncSinceRequest;\n  };\n  publish: {\n    \"/cinderlink/sync/save/request\": SyncSaveRequest;\n    \"/cinderlink/sync/save/response\": SyncSaveResponse;\n    \"/cinderlink/sync/fetch/request\": SyncFetchRequest;\n    \"/cinderlink/sync/fetch/response\": SyncFetchResponse;\n  };\n  subscribe: {\n    \"/cinderlink/sync/save/request\": SyncSaveRequest;\n    \"/cinderlink/sync/save/response\": SyncSaveResponse;\n    \"/cinderlink/sync/fetch/request\": SyncFetchRequest;\n    \"/cinderlink/sync/fetch/response\": SyncFetchResponse;\n  };\n  emit: {};\n}\n\nexport interface SyncPluginOptions {\n  syncing: Record<string, SyncConfig<any>>;\n}\n"]}