{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/client/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { IPFSWithLibP2P } from \"../ipfs\";\nimport type { IncomingP2PMessage, Peer, PeerRole } from \"../p2p\";\nimport type { DID } from \"dids\";\nimport { PluginEventDef } from \"../plugin\";\nimport {\n  IdentityResolved,\n  IdentityResolveRequest,\n  IdentityResolveResponse,\n  IdentitySetRequest,\n  IdentitySetResponse,\n  PeerConnectMessage,\n  PeerDisconnectMessage,\n} from \"../identity/types\";\nimport { IncomingPubsubMessage } from \"../pubsub\";\nimport { ProtocolRequest } from \"../protocol\";\nimport { LoggerInterface } from \"../logger\";\n\nexport type CinderlinkConstructorOptions = {\n  ipfs: IPFSWithLibP2P;\n  did: DID;\n  address: `0x${string}`;\n  addressVerification: string;\n  role: PeerRole;\n  logger?: LoggerInterface;\n};\n\nexport interface CinderlinkClientEvents<\n  PluginEvents extends PluginEventDef = PluginEventDef\n> extends PluginEventDef {\n  send: {\n    \"/identity/set/request\": IdentitySetRequest;\n    \"/identity/resolve/request\": IdentityResolveRequest;\n    \"/identity/resolve/response\": IdentityResolveResponse;\n    \"/identity/set/response\": IdentitySetResponse;\n  };\n  receive: {\n    \"/identity/set/request\": IdentitySetRequest;\n    \"/identity/resolve/request\": IdentityResolveRequest;\n    \"/identity/resolve/response\": IdentityResolveResponse;\n    \"/identity/set/response\": IdentitySetResponse;\n  };\n  publish: {\n    \"/peer/connect\": PeerConnectMessage;\n    \"/peer/disconnect\": PeerDisconnectMessage;\n  };\n  emit: {\n    \"/client/ready\": ProtocolRequest;\n    \"/client/loaded\": boolean;\n    \"/peer/connect\": Peer;\n    \"/server/connect\": Peer;\n    \"/peer/disconnect\": Peer;\n    \"/peer/handshake\": Peer;\n    \"/peer/authenticated\": Peer;\n    \"/peer/message\": IncomingP2PMessage<PluginEvents>;\n    \"/pubsub/message\": IncomingPubsubMessage<PluginEvents>;\n    \"/identity/resolved\": IdentityResolved;\n  };\n}\n"]}