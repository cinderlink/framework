{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../src/database/schema.ts"],"names":[],"mappings":"","sourcesContent":["import type Emittery from \"emittery\";\nimport type { CID } from \"multiformats\";\nimport type { DIDDagInterface } from \"../dag\";\nimport type { TableDefinition, TableInterface, TableRow } from \"./table\";\nimport { JWE } from \"did-jwt\";\nimport { BlockData } from \"./block\";\nimport { SubLoggerInterface } from \"../logger\";\n\nexport type SchemaDef = {\n  schemaId: string;\n  tables: Record<string, TableDefinition<any>>;\n};\n\nexport type SchemaEvents = {\n  \"/schema/loaded\": undefined;\n};\n\nexport type SavedSchema = {\n  schemaId: string;\n  defs: Record<string, TableDefinition>;\n  tables: Record<string, BlockData<any, any> | undefined>;\n};\n\nexport interface SchemaInterface extends Emittery<SchemaEvents> {\n  tables: Record<string, TableInterface<any>>;\n  schemaId: string;\n  defs: Record<string, TableDefinition<any>>;\n  dag: DIDDagInterface;\n  encrypted: boolean;\n  logger: SubLoggerInterface;\n\n  createTable<Def extends TableDefinition<any> = TableDefinition<any>>(\n    name: string,\n    def: Def\n  ): Promise<void>;\n  dropTable(name: string): Promise<void>;\n\n  getTable<\n    Row extends TableRow = TableRow,\n    Def extends TableDefinition<Row> = TableDefinition<Row>\n  >(\n    name: string\n  ): TableInterface<Row, Def>;\n\n  setDefs<Def extends TableDefinition = TableDefinition>(\n    defs: Record<string, Def>\n  ): void;\n\n  serialize(): Promise<SavedSchema | undefined>;\n  export(): Promise<JWE | SavedSchema | undefined>;\n  save(): Promise<CID | undefined>;\n  hasChanges(): boolean;\n}\n\nexport interface SchemaClass {\n  new (): SchemaInterface;\n  load(\n    cid: string | CID,\n    dag: DIDDagInterface,\n    logger: SubLoggerInterface,\n    encrypted: boolean\n  ): Promise<SchemaInterface>;\n  fromSavedSchema(\n    data: SavedSchema,\n    dag: DIDDagInterface,\n    logger: SubLoggerInterface,\n    encrypted: boolean\n  ): Promise<SchemaInterface>;\n}\n"]}